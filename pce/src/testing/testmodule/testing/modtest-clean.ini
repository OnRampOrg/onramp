#
# A Testing configuration file for module developers
# This file does not need to be in the exported module
#

#
# How to use:
# 1) Setup the tools (may only have to do this once per onramp instance)
#  $$ cd onramp/pce
#  $$ ./onramp_pce_setup
#  -- Note this may take a while as it need to download packages --
#
# 2) Complete this test file
#
# 3) Run the test file (must be from the onramp/pce directory)
#  $$ ./onramp_pce_service.py modtest src/testing/testmodule/testing/modtest.ini
#


# module_path/deploy_path must be absolute or relative to onramp/pce.
# deploy_path must not exist when test is run.
module_path=src/testing/testmodule  # Module root folder
deploy_path=src/testing/deploy   # Folder to deploy to

# Batch scheduler (current options: SLURM)
batch_scheduler=SLURM

# Number of tasks to configure in batch script
num_tasks=4

# Number of seconds to wait between successive results check calls after job
# is scheduled. If blank, 5 seconds.
results_check_sleep=

# Test script hooks: if any of the following are given, that test script will
# be called at the indicated time. Script will be called with module root dir
# as CWD. Must be absolute or relaitve to module root folder.
post_deploy_test=testing/deploy_check.py
post_preprocess_test=
post_launch_test=
post_status_test=
post_postprocess_test=

# INI containing simiulated user entries. Keys/values will be used to populate
# onramp_runparams.ini. Must be absolute or relative to module root folder.
custom_runparams=testing/dummy_runparams.ini

# If True, remove deploy_path when test is finished:
cleanup=true
